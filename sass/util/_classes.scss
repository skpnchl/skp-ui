.vertical-align-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.circle {
  overflow: hidden;
  border-radius: 50%;
}

.img-full {
  max-width: 100%;
  height: auto;
}

.select-none {
  user-select: none;
}

//display property
@each $prop in $display {
  .#{$prop} {
    display: $prop !important;
  }
}

@for $i from 1 through 5 {
  .#{$heading-pre}-#{$i} {
    font-size: (6em/5)*$i;
  }
}

.invisible {
  visibility: hidden !important;
}

.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

.fixed-top {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

.fixed-bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

.float-right {
  float: right !important;
}

.float-left {
  float: left !important;
}

// color for warning
@mixin warning($sel, $prop, $color) {
  @if ($prop == background-color) {
    .bg-#{$sel} {
      #{$prop}: $color;
    }
  } @else if ($prop == color) {
    .txt-#{$sel} {
      #{$prop}: $color;
    }
  } @else {

  }
}

@each $prop, $val in $color-warning {
  @include warning($prop, background-color, $val);
  @include warning($prop, color, $val);
}

//max widht height and and

@each $val in $width-height {
  .mw-#{$val} {
    max-width: percentage($val/100);
  }
  .w-#{$val} {
    width: percentage($val/100);
  }
  .mh-#{$val} {
    max-height: percentage($val/100);
  }
  .h-#{$val} {
    height: percentage($val/100);
  }
}

// margin or padding
@mixin mp($s, $p) {
  @each $prop, $val in $mp {
    .#{$s}-#{$prop} {
      #{$p}: $val !important;
    }

    .#{$s}x-#{$prop} {
      #{$p}-left: $val !important;
      #{$p}-right: $val !important;
    }

    .#{$s}y-#{$prop} {
      #{$p}-top: $val !important;
      #{$p}-bottom: $val !important;
    }

    @each $prop2, $val2 in $pos {
      .#{$s}#{$val2}-#{$prop} {
        #{$p}-#{$prop2}: $val !important;
      }

    }
  }
  .#{$s}-0 {
    #{$p}: 0 !important;
  }

  .#{$s}x-0 {
    #{$p}-left: 0 !important;
    #{$p}-right: 0 !important;
  }

  .#{$s}y-0 {
    #{$p}-top: 0 !important;
    #{$p}-bottom: 0 !important;
  }

  @each $prop2, $val2 in $pos {
    .#{$s}#{$val2}-0 {
      #{$p}-#{$prop2}: 0 !important;
    }

  }
}

@include mp(m, margin);
@include mp(p, padding);

//text

@each $val in $text-transform {
  .#{$val} {
    text-transform: $val !important;
  }
}

@mixin text-align($break) {
  @each $val in $text-align {
    .txt#{$break}#{$val} {
      text-align: $val !important;
    }
  }
}

@include text-align('-');

//font weight
@each $val in $font-weight {
  .font-#{$val} {
    font-weight: $val !important;
  }
}

.font-italic {
  font-style: italic;
}

//ul ol

@each $val in $list-style-type {
  .list-#{$val} {
    list-style-type: $val;
  }
}

//child ol ul margin
li > ul, li > ol {
  margin-left: $olulm;
}

.box-shadow-1 {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

.box-shadow-2 {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}

.box-shadow-3 {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

.box-shadow-4 {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

.box-shadow-5 {
  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
}

//radius 5 10 ....
@mixin b($i, $p, $c) {
  .border-radius-#{$c}-#{$i} {
    @if ($p=="top") {
      border-radius: ($radius * $i) ($radius * $i) 0 0;
    } @else if ($p=="right") {
      border-radius: 0 ($radius * $i) ($radius * $i) 0;
    } @else if ($p=="bottom") {
      border-radius: 0 0 ($radius * $i) ($radius * $i);
    } @else if ($p=="left") {
      border-radius: ($radius * $i) 0 0 ($radius * $i);
    }
  }
}

@for $i from 1 through 6 {
  @include b($i, top, t);
  @include b($i, right, r);
  @include b($i, bottom, b);
  @include b($i, left, l);

  .border-radius-#{$i} {
    border-radius: ($radius * $i);
  }
}

.margin-auto {
  margin-left: auto;
  margin-right: auto;
}